/home/gjoshi7/miniconda3/envs/groqflow/lib/python3.10/site-packages/torch/_utils.py:831: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  return self.fget.__get__(instance, owner)()



[1mBuilding "bert_tiny"[0m
[0m      Exporting PyTorch to ONNX   [0m
[0m      Optimizing ONNX file   [0m
[0m      Checking for Op support   [0m
[0m      Converting to FP16   [0m
[0m      Compiling model   [0m
[0m      Assembling model   [0m
[1A[1A[1A[1A[1A[1A[92m    ✓ [0m[0mExporting PyTorch to ONNX   [0m
[92m    ✓ [0m[0mOptimizing ONNX file   [0m
      Checking for Op support         Checking for Op support.        Checking for Op support..       Checking for Op support...[92m    ✓ [0m[0mChecking for Op support   [0m
[92m    ✓ [0m[0mConverting to FP16   [0m
      Compiling model         Compiling model.        Compiling model..       Compiling model...      Compiling model         Compiling model.        Compiling model..       Compiling model...      Compiling model         Compiling model.        Compiling model..       Compiling model...      Compiling model         Compiling model.        Compiling model.. [92m    ✓ [0m[0mCompiling model   [0m
      Assembling model         Assembling model.        Assembling model..       Assembling model...      Assembling model         Assembling model.        Assembling model..       Assembling model...      Assembling model         Assembling model.        Assembling model..       Assembling model...      Assembling model         Assembling model.        Assembling model..       Assembling model...      Assembling model         Assembling model.        Assembling model..       Assembling model...      Assembling model         Assembling model.        Assembling model..       Assembling model...      Assembling model         Assembling model.        Assembling model.. [92m    ✓ [0m[0mAssembling model   [0m
[92m
Woohoo! [0m[0mSaved to [0m[1m~/.cache/groqflow/bert_tiny[0m[0m[0m
/home/gjoshi7/miniconda3/envs/groqflow/lib/python3.10/site-packages/datasets/load.py:1461: FutureWarning: The repository for sst contains custom code which must be executed to correctly load the dataset. You can inspect the repository content at https://hf.co/datasets/sst
You can avoid this message in future by passing the argument `trust_remote_code=True`.
Passing `trust_remote_code=True` will be mandatory to load this dataset from the next major release of `datasets`.
  warnings.warn(
Preprocessing data.
Downloading builder script:   0%|          | 0.00/9.13k [00:00<?, ?B/s]Downloading builder script: 100%|██████████| 9.13k/9.13k [00:00<00:00, 45.0MB/s]
Downloading readme:   0%|          | 0.00/6.68k [00:00<?, ?B/s]Downloading readme: 100%|██████████| 6.68k/6.68k [00:00<00:00, 27.2MB/s]
Downloading data:   0%|          | 0.00/6.37M [00:00<?, ?B/s]Downloading data:   0%|          | 17.4k/6.37M [00:00<00:39, 162kB/s]Downloading data:   1%|▏         | 82.9k/6.37M [00:00<00:14, 424kB/s]Downloading data:   4%|▎         | 230k/6.37M [00:00<00:07, 852kB/s] Downloading data:   7%|▋         | 476k/6.37M [00:00<00:04, 1.42MB/s]Downloading data:  14%|█▎        | 869k/6.37M [00:00<00:02, 2.23MB/s]Downloading data:  23%|██▎       | 1.48M/6.37M [00:00<00:01, 3.39MB/s]Downloading data:  37%|███▋      | 2.38M/6.37M [00:00<00:00, 5.03MB/s]Downloading data:  62%|██████▏   | 3.93M/6.37M [00:00<00:00, 8.04MB/s]Downloading data:  97%|█████████▋| 6.18M/6.37M [00:00<00:00, 12.0MB/s]Downloading data: 100%|██████████| 6.37M/6.37M [00:00<00:00, 6.55MB/s]
Downloading data:   0%|          | 0.00/790k [00:00<?, ?B/s]Downloading data:   4%|▍         | 33.8k/790k [00:00<00:02, 323kB/s]Downloading data:  13%|█▎        | 99.3k/790k [00:00<00:01, 499kB/s]Downloading data:  29%|██▉       | 230k/790k [00:00<00:00, 839kB/s] Downloading data:  56%|█████▌    | 443k/790k [00:00<00:00, 1.30MB/s]Downloading data:  91%|█████████▏| 722k/790k [00:00<00:00, 1.78MB/s]Downloading data: 100%|██████████| 790k/790k [00:00<00:00, 1.49MB/s]
Generating train split:   0%|          | 0/8544 [00:00<?, ? examples/s]Generating train split:   0%|          | 1/8544 [00:00<1:10:19,  2.02 examples/s]Generating train split:  38%|███▊      | 3237/8544 [00:00<00:00, 7175.18 examples/s]Generating train split:  89%|████████▊ | 7566/8544 [00:00<00:00, 15860.27 examples/s]Generating train split: 100%|██████████| 8544/8544 [00:00<00:00, 11486.70 examples/s]
Generating validation split:   0%|          | 0/1101 [00:00<?, ? examples/s]Generating validation split:   0%|          | 1/1101 [00:00<08:41,  2.11 examples/s]Generating validation split: 100%|██████████| 1101/1101 [00:00<00:00, 2056.79 examples/s]
Generating test split:   0%|          | 0/2210 [00:00<?, ? examples/s]Generating test split:   0%|          | 1/2210 [00:00<17:31,  2.10 examples/s]Generating test split: 100%|██████████| 2210/2210 [00:00<00:00, 3936.26 examples/s]
[96m
Info: [0m[0mNo inputs received for benchmark. Using the inputs provided during model compilation.[0m
Running inference on GroqChip.
Running inference using PyTorch model (CPU).
  0%|          | 0/2210 [00:00<?, ?it/s]  2%|▏         | 37/2210 [00:00<00:05, 364.40it/s]  4%|▎         | 82/2210 [00:00<00:05, 409.86it/s]  6%|▌         | 128/2210 [00:00<00:04, 429.08it/s]  8%|▊         | 173/2210 [00:00<00:04, 436.96it/s] 10%|▉         | 219/2210 [00:00<00:04, 444.15it/s] 12%|█▏        | 265/2210 [00:00<00:04, 448.35it/s] 14%|█▍        | 311/2210 [00:00<00:04, 451.38it/s] 16%|█▌        | 357/2210 [00:00<00:04, 451.43it/s] 18%|█▊        | 403/2210 [00:00<00:03, 452.70it/s] 20%|██        | 449/2210 [00:01<00:03, 453.57it/s] 22%|██▏       | 495/2210 [00:01<00:03, 454.45it/s] 24%|██▍       | 541/2210 [00:01<00:03, 455.47it/s] 27%|██▋       | 587/2210 [00:01<00:03, 455.00it/s] 29%|██▊       | 633/2210 [00:01<00:03, 455.68it/s] 31%|███       | 679/2210 [00:01<00:03, 456.40it/s] 33%|███▎      | 725/2210 [00:01<00:03, 455.83it/s] 35%|███▍      | 771/2210 [00:01<00:03, 456.30it/s] 37%|███▋      | 817/2210 [00:01<00:03, 455.15it/s] 39%|███▉      | 863/2210 [00:01<00:02, 455.71it/s] 41%|████      | 909/2210 [00:02<00:02, 456.13it/s] 43%|████▎     | 955/2210 [00:02<00:02, 456.84it/s] 45%|████▌     | 1001/2210 [00:02<00:02, 457.16it/s] 47%|████▋     | 1047/2210 [00:02<00:02, 457.03it/s] 49%|████▉     | 1093/2210 [00:02<00:02, 456.40it/s] 52%|█████▏    | 1139/2210 [00:02<00:02, 456.83it/s] 54%|█████▎    | 1185/2210 [00:02<00:02, 456.57it/s] 56%|█████▌    | 1231/2210 [00:02<00:02, 457.31it/s] 58%|█████▊    | 1277/2210 [00:02<00:02, 457.76it/s] 60%|█████▉    | 1323/2210 [00:02<00:01, 457.98it/s] 62%|██████▏   | 1369/2210 [00:03<00:01, 458.25it/s] 64%|██████▍   | 1415/2210 [00:03<00:01, 455.82it/s] 66%|██████▌   | 1461/2210 [00:03<00:01, 454.15it/s] 68%|██████▊   | 1507/2210 [00:03<00:01, 455.08it/s] 70%|███████   | 1553/2210 [00:03<00:01, 455.90it/s] 72%|███████▏  | 1599/2210 [00:03<00:01, 456.51it/s] 74%|███████▍  | 1645/2210 [00:03<00:01, 457.01it/s] 77%|███████▋  | 1691/2210 [00:03<00:01, 457.10it/s] 79%|███████▊  | 1737/2210 [00:03<00:01, 457.09it/s] 81%|████████  | 1783/2210 [00:03<00:00, 455.40it/s] 83%|████████▎ | 1829/2210 [00:04<00:00, 455.73it/s] 85%|████████▍ | 1875/2210 [00:04<00:00, 453.61it/s] 87%|████████▋ | 1921/2210 [00:04<00:00, 454.69it/s] 89%|████████▉ | 1967/2210 [00:04<00:00, 455.41it/s] 91%|█████████ | 2013/2210 [00:04<00:00, 455.54it/s] 93%|█████████▎| 2059/2210 [00:04<00:00, 455.71it/s] 95%|█████████▌| 2105/2210 [00:04<00:00, 455.86it/s] 97%|█████████▋| 2151/2210 [00:04<00:00, 455.92it/s] 99%|█████████▉| 2197/2210 [00:04<00:00, 456.18it/s]100%|██████████| 2210/2210 [00:04<00:00, 453.53it/s]
+--------+----------+-------------------------+----------------+----------------------+-------------+
| Source | Accuracy | end-to-end latency (ms) | end-to-end IPS | on-chip latency (ms) | on-chip IPS |
+--------+----------+-------------------------+----------------+----------------------+-------------+
|  cpu   |  77.47%  |           2.21          |     453.45     |          --          |      --     |
|  groq  |  77.47%  |           0.05          |    18962.27    |         0.03         |   37576.72  |
+--------+----------+-------------------------+----------------+----------------------+-------------+
Proof point /home/gjoshi7/groqflow/proof_points/natural_language_processing/bert/bert_tiny.py finished!
